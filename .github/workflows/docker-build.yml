name: Docker Build

on:
  push:
    branches:
      - develop
      - master
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Custom image tag (default: branch name)'
        required: false
        default: ''
      push_image:
        description: 'Push image to registry'
        type: boolean
        default: true
      use_cache:
        description: 'Use build cache'
        type: boolean
        default: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: dianplus/openresty

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,prefix={{branch}}-

      - name: Set image tag for manual dispatch
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.image_tag != ''
        run: |
          echo "image_tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
        id: manual_tag

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event.inputs.push_image != 'false' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.image_tag != '' && format('{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, github.event.inputs.image_tag) || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=gha,scope=buildx
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: |
            type=gha,mode=max,scope=buildx
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            RESTY_J=4

      - name: Image digest
        id: docker_build
        run: echo "Image built successfully"

      - name: Build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tags**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Platforms**: linux/amd64,linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "- **Push**: ${{ github.event.inputs.push_image != 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cache**: ${{ github.event.inputs.use_cache != 'false' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_STEP_SUMMARY
