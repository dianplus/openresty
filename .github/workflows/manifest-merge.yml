name: Manifest Merge (Multi-Arch)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Base tag to publish (will merge <tag>-amd64 and <tag>-arm64)'
        required: true
      image_name:
        description: 'Image name under ghcr.io (default: dianplus/openresty)'
        required: false
        default: 'dianplus/openresty'
      push_latest:
        description: 'Also update :latest to point to the merged manifest'
        type: boolean
        required: false
        default: false
  repository_dispatch:
    types: [merge-manifest]

env:
  REGISTRY: ghcr.io

jobs:
  merge:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Resolve Inputs
        id: vars
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            TAG="${{ github.event.client_payload.tag }}"
            IMAGE_NAME="${{ github.event.client_payload.image_name }}"
            PUSH_LATEST="${{ github.event.client_payload.push_latest }}"
          else
            TAG="${{ github.event.inputs.tag }}"
            IMAGE_NAME="${{ github.event.inputs.image_name }}"
            PUSH_LATEST="${{ github.event.inputs.push_latest }}"
          fi
          if [[ -z "$IMAGE_NAME" ]]; then IMAGE_NAME="dianplus/openresty"; fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "push_latest=$PUSH_LATEST" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge amd64/arm64 manifests into multi-arch tag
        run: |
          set -euo pipefail
          REGISTRY="${{ env.REGISTRY }}"
          IMAGE_NAME="${{ steps.vars.outputs.image_name }}"
          TAG="${{ steps.vars.outputs.tag }}"

          if [[ -z "$TAG" ]]; then
            echo "tag is required" >&2
            exit 1
          fi

          AMD64_REF="$REGISTRY/$IMAGE_NAME:${TAG}-amd64"
          ARM64_REF="$REGISTRY/$IMAGE_NAME:${TAG}-arm64"
          TARGET_REF="$REGISTRY/$IMAGE_NAME:${TAG}"

          echo "Merging:"
          echo "  $AMD64_REF"
          echo "  $ARM64_REF"
          echo "→ $TARGET_REF"

          docker buildx imagetools create \
            -t "$TARGET_REF" \
            "$AMD64_REF" \
            "$ARM64_REF"

      - name: Also update :latest (optional)
        if: steps.vars.outputs.push_latest == 'true'
        run: |
          set -euo pipefail
          REGISTRY="${{ env.REGISTRY }}"
          IMAGE_NAME="${{ steps.vars.outputs.image_name }}"
          TAG="${{ steps.vars.outputs.tag }}"

          AMD64_REF="$REGISTRY/$IMAGE_NAME:${TAG}-amd64"
          ARM64_REF="$REGISTRY/$IMAGE_NAME:${TAG}-arm64"
          LATEST_REF="$REGISTRY/$IMAGE_NAME:latest"

          echo "Updating latest manifest → $LATEST_REF"
          docker buildx imagetools create \
            -t "$LATEST_REF" \
            "$AMD64_REF" \
            "$ARM64_REF"

      - name: Summary
        run: |
          echo "## Manifest Merge" >> $GITHUB_STEP_SUMMARY
          echo "- Image: ${{ env.REGISTRY }}/${{ steps.vars.outputs.image_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Tag: ${{ steps.vars.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- Updated latest: ${{ steps.vars.outputs.push_latest }}" >> $GITHUB_STEP_SUMMARY

